server: # 配置server
  tomcat: # springboot乱码解决
    uri-encoding: UTF-8
  servlet:
    context-path: /cms-api
  port: 9721

spring:
  profiles:
    active:
      - prod
      - property
  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver       # 数据库访问配置,主数据源，默认的
      initial-size: 5                                   # 下面为连接池的补充设置，应用到上面所有数据源中,初始化大小，最小，最大
      min-idle: 5
      max-active: 20
      max-wait: 60000                                   # 配置获取连接等待超时的时间
      time-between-eviction-runs-millis: 60000          # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000            # 配置一个连接在池中最小生存的时间，单位是毫秒
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true                    # 打开PSCache，并且指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,log4j2,config                       # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filter:
        stat:
          merge-sql: true
          slow-sql-millis: 5000
        config:
          enabled: true
  sa-token:
    token-name: satoken        # token名称（同时也是cookie名称）
    timeout: 2592000           # token有效期，单位s 默认30天
    is-share: true             # 在多人登录同一账号时，是否共享会话（为true时共用一个，为false时新登录挤掉旧登录）
    is-read-head: true         # 是否在cookie读取不到token时，继续从请求header里继续尝试读取
    is-read-body: true         # 是否在header读取不到token时，继续从请求题参数里继续尝试读取
    is-v: true                 # 是否在初始化配置时打印版本字符画

mybatis-plus: # mybatis-plus相关配置
  mapper-locations: classpath:mybatis/*Mapper.xml # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging: # 日志
  config: classpath:log4j2/log4j2.xml

---
spring: # 开发环境配置 1
  profiles: dev
  datasource:
    druid:
      url: jdbc:mysql://sh-cdb-a2adziso.sql.tencentcdb.com:60677/cmsdb-dev?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false&allowPublicKeyRetrieval=true
      username: root
      password: kad@666@888

---
spring: # 开发环境配置 2
  profiles: dev2
  datasource:
    druid:
      url: jdbc:mysql://47.115.8.44:3306/cmsDB-dev?characterEncoding=utf8
      username: root
      password: Liyu8824

---
spring: # 开发环境配置 3
  profiles: dev3
  datasource:
    druid:
      url: jdbc:mysql://218.194.167.125:23306/cms-dev?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false&allowPublicKeyRetrieval=true
      username: root
      password: kad@@@666888

---
spring: # 生产环境配置 1
  profiles: prod
  datasource:
    druid:
      url: jdbc:mysql://sh-cdb-a2adziso.sql.tencentcdb.com:60677/cmsdb-dev?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false&allowPublicKeyRetrieval=true
      username: root
      password: kad@666@888

---
spring: # 生产环境配置 2
  profiles: prod2
  datasource:
    druid:
      url: jdbc:mysql://localhost:23306/cms-dev?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false&allowPublicKeyRetrieval=true
      username: root
      password: kad@@@666888
